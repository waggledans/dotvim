= start new project with maven =mvn archetype:generate
> choose a number:  1268 (1268: remote -> org.springframework.boot:spring-boot-sample-web-ui-archetype (Spring Boot Web UI Sample) or 610: remote -> org.apache.maven.archetypes:maven-archetype-quickstart (An archetype which contains a sample Maven project.))
> choose version: 6
groupId: com.dans.training.spring     //package name
artifactId:  MavenTestApp             // application name
version:         
= lifecycle =
https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
validate - validate the project is correct and all necessary information is available
compile - compile the source code of the project
test - test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
package - take the compiled code and package it in its distributable format, such as a JAR.
integration-test - process and deploy the package if necessary into an environment where integration tests can be run
verify - run any checks to verify the package is valid and meets quality criteria
install - install the package into the local repository, for use as a dependency in other projects locally
deploy - done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.
= stages =
mvn compile
mvn test
mvn package (runs both test and compile)
* run:
  java -cp target/MavenTestApp-1.0-SNAPSHOT.jar com.dans.training.maven.App

mvn install
= dependencies = 
artifacts that are used by our code
= plugins =
something that used after the our code is built
 * Example(lines in config.xml and then command to run the plugin)
 <build><plugins>
  <groupId>org.mortbay.jetty</grouId>
  <artifactId>maven-jetty-plugin</artifactId>
  ...
mvn jetty:run  
 * Example2:
  compile plugin
  
= install 3d party jar =
mvn install:install-file -Dfile=<path-to-file> -DgroupId=<group-id> \
    -DartifactId=<artifact-id> -Dversion=<version> -Dpackaging=<packaging>

