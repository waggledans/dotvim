Debug control:

1. setenv SETUP_DEBUG ''

2. To print the path of every file that the setup source do:
   ->    setenv SETUP_DEBUG   '1'
   Or    setenv SETUP_DEBUG  'filePath'

3. To check an ENVIRONMENT variable, do:
   ->   setenv SETUP_DEBUG envENVNAME
   Sample:   setenv SETUP_DEBUG envICVSFLOWS

4. To turn on the skill debugger and to do  tracef(t):
   ->    setenv  SETUP_DEBUG  'skillTrace'

5.  To turn on the skill debugger and be able to get a path of the skill files:
   ->    setenv  SETUP_DEBUG  'getLoadedFiles'
    Later in opus, use getAllLoadedFiles() to see where the functions were
    loaded from.



# Some definitions:
# SETUP_TOOLS - all the tools in this setup
# SETUP_REV   - directory that holds setup tool in $CAD_ROOT $SETUP_REV = 
# MY_PROJECT: The project you belong to is the project you have write 
# permission to.Example: p55c.
# PROJECT: The reference project is the project whose database you want to
# view. Example: p24t.
# MODEL: The model is a list of libraries and for each library, its associated
# configuration and DBBs.
# DBB: The DataBaseBlock is a viewing window to part of the database. 
# AREA_NAME: The area_name is an optional parameter that allows you to create 
# another level of partitioning within your working area. Example: test1.
# CURRENT_TOOL: The tool/task name is determined by your design activity.
# Examples: opus_sch (for circuit activities), opus_lay 
# for layout activities)For more details, view the file $DT_TOOLS/TOOLS . 
# USERCFGFILE: it is a file listing libraries and configurations. It
# gives the user the ability to override the model definition in $DA_PROJECTS/$PROJECT/$PROJECT.$MODEL.cfg.
# ALT_TOOL_LIST: Points to the user given tools and versions list file (opt')  -ot my_tools
# in addition to $DA_PROJECTS/$PROJECT/$SETUP_REV_NUMBER/${CURRENT_TOOL}.tools.$SETUP_HOSTYPE
# instead of -ot could be in ~/.tool.versions
# LAST_SU_SESSION: Points to the last setup session file (must be set prior to 
# the session. ~/.last_setup_session by default
# -at tool1:tool2   To add additional tools to setup§:w
# -c user.cfg   is used to override model cfg
# -keep switch will tell the setup not to remove the $DMSPATH files
# -ovdbr   override DB_ROOT




# from /usr/local/bin/uesetup
setenv UESITE `/usr/intel/bin/sitecode`
setenv MOUNTS          /p/mpg/proc
setenv COMMON          $MOUNTS/common2
setenv DA_PROJECTS     $MOUNTS/projects/da_projects
setenv DB_ROOT         /nfs/site/proj/mpg/proc/projects/db_root
setenv PROJ_TOOLS      $COMMON/proj_tools
setenv PROJ_SKILL      $COMMON/proj_skill/2.0
setenv SETUP_REV_NUMBER o50syn4.2

# getHOSTYPE  uses the unix command uname to find the machine type
source $MOUNTS/cad/em64t_linux26/setup/o50syn4.2/bin/getHOSTYPE
setenv CAD_ROOT        $MOUNTS/cad/$SETUP_HOSTYPE
#The setting of the PROJECT_ITOOLS environment is done in uesetup. The file will be used to override /usr/intel/bin tool versions only in case of a problem$
setenv PROJECT_ITOOLS  $CAD_ROOT/uesetup/project_itools.override
# print the Cshell depth
setenv SAVE_SHLVL $SHLVL
# uesetup follows then to run ${CAD_ROOT}/setup/o50syn4.2/bin/da_tools_su

$SETUP_DEBUG == [1,filePath, env*, getLoadedFiles ]# check for debug env
# getLoadedFile   to see where the functions were loaded from"
setenv DT_TOOLS $CAD_ROOT/DT_tools/`$SETUP_REV/bin/getTv DT_tools`
source $DA_PROJECTS/$PROJECT/$SETUP_REV_NUMBER/$PROJECT.env
# Eliminate duplicate directories in the Unix path.(setup_bin/DupInUnixPath)"
   set path = ($setup_bin  $path)
   set path = (`$setup_bin/DupInUnixPath PATH`)

# DMS compiler:
# the command below doesnt seem to work as expected
setenv TYPES "sch net lay ctl doc flp gls fct rlp slo sim fev"
setenv usercfgfile ~/public/setup//cdr2_temp_c8lib5.cfg #(if exists)
$SETUP_REV/bin/dmsCompiler_new.pl -usercfgfile  $usercfgfile -createDms2opus $CDSLIB -dbtypes $TYPES 

# from safran:
update_dmspath.tcl -lib "RW(p1271LongLoad_dts_lay)" -libpath "/nfs/pdx/proj/dt/cents/dts_mounts/db/lay/p1271LongLoad/work/p1271LongLoad_dts_lay" -types "sch net lay ctl doc flp gls fct rlp slo sim fev"

-at <tool name>  additional tool to uesetup
or 
-at tool1:tool2   # two additional tools