/*
To customize toolbar item:
1)
    UNIX% cd .cadence/dfII/toolbars/byApplication
    UNIX% cp  $CDSHOME/share/cdssetup/dfII/toolbars/byApplication/Schematics.toolbars .
    UNIX% cat Schematics.toolbars
        18        name        schFileToolbarCheckAndSave
        19        text        "Check and Save"
        20        iconFile    "file-checked-save.png"
        21        callback    "CCScheckSave()"   ====> Modify this line
                               ^^^^^^^^^^^^^^^^^^^^^^^
        22            enableCondition    editable
2) Do the same only copy the file to $CDS_SITE/cdssetup/dfII/toolbars/byApplication
    or to $CDS_PROJECT (or any other folder listed in setup.loc)
*/

/*
to customize menu item:
$CDS_INST_DIR/tools/dfII/etc/tools/schematic/menus.sample
$CDS_INST_DIR/tools/dfII/etc/tools/schematic/README_menus.txt
*/
procedure(CCScheckSave()
println("This is a custom Check and Save call")
schHiCheckAndSave()
)
 
procedure(CCScheckAndSaveTrigger(args)
let((barId new)
;; Get the toolbar id of the File toolbar
barId  = car(setof(menu hiGetWindowToolbars( hiGetSessionWindow(args->window) ) 
		    rexMatchp("^schFileToolbar" symbolToString(menu~>hiToolBarSym))))

;;Change callback if default callback is present

if(barId->schFileToolbarCheckAndSave->hiCallback=="schHiCheckAndSave()"
	then
	new=hiCreateAction(
      		?name   'myschFileToolbarCheckAndSave
      		?icon   barId->schFileToolbarCheckAndSave->hiIcon
	        ?iconText   "New Check and Save"
	        ?callback   "CCScheckSave()"
    		)

	hiDeleteToolbarItem( barId 'schFileToolbarCheckAndSave)
	hiAddToolbarItem(barId new)
	) ;if
);let
);procedure


deRegUserTriggers("schematic" nil nil  'CCScheckAndSaveTrigger)
deRegUserTriggers("schematicXL" nil nil  'CCScheckAndSaveTrigger)

